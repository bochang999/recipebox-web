apply plugin: 'com.android.application'

android {
    namespace "com.bochang.recipebox"
    compileSdk rootProject.ext.compileSdkVersion
    
    // 署名設定 - GitHub Actionsから渡されるプロパティを使用
    signingConfigs {
        debug {
            // デバッグ版の署名設定（開発時）
        }
        release {
            if (project.hasProperty('android.injected.signing.store.file')) {
                // パス重複問題修正：相対パス指定で keystore.jks を直接参照
                storeFile new File(projectDir, 'keystore.jks')
                storePassword project.property('android.injected.signing.store.password')
                keyAlias project.property('android.injected.signing.key.alias')
                keyPassword project.property('android.injected.signing.key.password')
                
                // 全署名バージョン有効化（提案に従い）
                enableV1Signing true
                enableV2Signing true 
                enableV3Signing true
            }
        }
    }
    
    defaultConfig {
        applicationId "com.bochang.recipebox"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode project.hasProperty('android.injected.version.code') ? project.property('android.injected.version.code') as Integer : 1
        versionName project.hasProperty('android.injected.version.name') ? project.property('android.injected.version.name') : "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        debug {
            // 開発版は .debug サフィックスでパッケージ名を分離（提案採用）
            applicationIdSuffix ".debug"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 署名設定が存在する場合は使用
            if (project.hasProperty('android.injected.signing.store.file')) {
                signingConfig signingConfigs.release
            }
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
